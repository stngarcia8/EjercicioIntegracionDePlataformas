-- Modulo ventaBook.
-- Script: Creacion de tablas.
-- Ramo: Integracion de plataformas.
-- Profesora: Cindy Contador.
-- Alumnos: Pedro Briceno, Elias Garcia, Daniel Garcia, Ignacio Salazar.

SET ECHO OFF;
alter session set "_ORACLE_SCRIPT"=true;
clear screen;
prompt Eliminando datos antiguos.;

-- Eliminando el usuario antes de quitar  tablespace.
Drop user ventaBook_usr cascade;

-- Eliminando el table space.
drop tablespace ventaBook_tbs INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;


-- Creando el tablespace de libros.
prompt Creando tablespace.;
CREATE TABLESPACE ventaBook_tbs
DATAFILE 'ventaBook.dbf'
size 500M
autoextend on;


-- Creando el usuario.
prompt Creando el usuario.;
CREATE USER ventaBook_usr
IDENTIFIED BY ventaBook_pwd
DEFAULT TABLESPACE ventaBook_tbs
temporary tablespace temp;


-- Asignando los privilegios al usuario.
prompt Asignando los permisos necesarios.;
GRANT CREATE SESSION TO ventaBook_usr;
GRANT RESOURCE TO ventaBook_usr;
GRANT EXECUTE ON SYS.DBMS_LOB TO ventaBook_usr;
GRANT EXECUTE ON SYS.DBMS_RANDOM TO ventaBook_usr;
GRANT CREATE ANY TABLE TO ventaBook_usr;
GRANT CREATE SEQUENCE TO ventaBook_usr;
GRANT CREATE PROCEDURE, EXECUTE ANY PROCEDURE TO ventaBook_usr;
GRANT CREATE TRIGGER TO ventaBook_usr;


-- Definiendo el tablespace que trabajara el usuario.
ALTER USER ventaBook_usr QUOTA UNLIMITED ON ventaBook_tbs;


-- Estableciendo cambios.
commit;





--Creaci√≥n de tablas.
prompt Creando tabla autor;
CREATE TABLE ventaBook_usr.autor (
    id_autor       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre_autor   VARCHAR2(75) NOT NULL,
    CONSTRAINT autor_pk PRIMARY KEY ( id_autor )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla estados;
CREATE TABLE ventaBook_usr.estado (
    id_estado       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre_estado   VARCHAR2(12) NOT NULL,
    CONSTRAINT estado_pk PRIMARY KEY ( id_estado )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla sucursal;
CREATE TABLE ventaBook_usr.sucursal (
    id_sucursal         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre_sucursal      VARCHAR2(50) NOT NULL,
    direccion_sucursal   VARCHAR2(80) NOT NULL,
    CONSTRAINT sucursal_pk PRIMARY KEY ( id_sucursal )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla tipo de documento;
CREATE TABLE ventaBook_usr.tipo_doc (
    id_tipo_doc             NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre_tipo_documento   VARCHAR2(15) NOT NULL,
    CONSTRAINT tipo_doc_pk PRIMARY KEY ( id_tipo_doc )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla tipo de usuario;
CREATE TABLE ventaBook_usr.tipo_us (
    id_tipo       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre_tipo   VARCHAR2(20) NOT NULL,
    CONSTRAINT tipo_us_pk PRIMARY KEY ( id_tipo )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla usuario;
CREATE TABLE ventaBook_usr.usuario (
    id_usuario           NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre_usuario       VARCHAR2(50) NOT NULL,
    rut_usuario          VARCHAR2(10) NOT NULL,
    contrasena_usuario   VARCHAR2(20) NOT NULL,
    id_sucursal         NUMBER NOT NULL,
    id_tipo              NUMBER NOT NULL,
    CONSTRAINT usuario_pk PRIMARY KEY ( id_usuario ),
	CONSTRAINT usuario_sucursal_fk FOREIGN KEY ( id_sucursal )
	REFERENCES ventaBook_usr.sucursal ( id_sucursal ),
	CONSTRAINT usuario_tipo_us_fk FOREIGN KEY ( id_tipo )
	REFERENCES ventaBook_usr.tipo_us ( id_tipo )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla libro;
CREATE TABLE ventaBook_usr.libro (
    id_libro                   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    titulo_libro               VARCHAR2(50) NOT NULL,
    isbn_libro                 VARCHAR2(25) NOT NULL,
    sinopsis_libro             VARCHAR2(1000),
    cantidadejemplares_libro   NUMBER(4) DEFAULT 0 NOT NULL,
    id_autor                   NUMBER NOT NULL,
    precio_libro               NUMBER(6) NOT NULL,
    CONSTRAINT libro_pk PRIMARY KEY ( id_libro ),
     CONSTRAINT libro_autor_fk FOREIGN KEY ( id_autor )
	 REFERENCES ventaBook_usr.autor ( id_autor )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla venta;
CREATE TABLE ventaBook_usr.venta (
    id_venta      VARCHAR2(36) NOT NULL,
    fecha_venta   DATE NOT NULL,
	rutCliente varchar2(10) not null,
	nombreCliente varchar2(50) not null,
    razonSocial_factura   VARCHAR2(80),
    rut_factura            VARCHAR2(10),
    direccion_factura      VARCHAR2(100),
    giro_factura        VARCHAR2(50),
    contacto_factura       VARCHAR2(50),
    ciudad_factura         VARCHAR2(20),
    id_usuario    NUMBER NOT NULL,
    id_tipo_doc   NUMBER NOT NULL,
    CONSTRAINT venta_pk PRIMARY KEY ( id_venta ),
	CONSTRAINT venta_tipo_doc_fk FOREIGN KEY ( id_tipo_doc )
	REFERENCES ventaBook_usr.tipo_doc ( id_tipo_doc ),
	CONSTRAINT venta_usuario_fk FOREIGN KEY ( id_usuario )
	REFERENCES ventaBook_usr.usuario ( id_usuario )
) TABLESPACE ventaBook_tbs;


prompt Creando tabla detalle de venta;
CREATE TABLE ventaBook_usr.det_venta (
    id_venta     VARCHAR2(36) NOT NULL,
    id_libro     NUMBER NOT NULL,
    cantidad     NUMBER(4) NOT NULL,
    CONSTRAINT det_venta_pk PRIMARY KEY ( id_venta, id_libro ),
	CONSTRAINT det_venta_venta_fk FOREIGN KEY ( id_venta )
	REFERENCES ventaBook_usr.venta ( id_venta ),
	CONSTRAINT det_venta_libro_fk FOREIGN KEY ( id_libro )
	REFERENCES ventaBook_usr.libro ( id_libro )
) TABLESPACE ventaBook_tbs;







-- Creando estados.
prompt Creando registros para tabla estados;
INSERT INTO ventaBook_usr.estado (id_estado, nombre_estado) VALUES (1, 'Disponible');
INSERT INTO ventaBook_usr.estado (id_estado, nombre_estado) VALUES (2, 'Vendido');
INSERT INTO ventaBook_usr.estado (id_estado, nombre_estado) VALUES (3, 'Reservado');


-- Creando sucursales.
prompt Creando registros para tabla sucursales;
INSERT INTO ventaBook_usr.sucursal (id_sucursal, nombre_sucursal, direccion_sucursal) VALUES (null, 'Sucursal 1', 'Direccion sucursal 1'); 
INSERT INTO ventaBook_usr.sucursal (id_sucursal, nombre_sucursal, direccion_sucursal) VALUES (null, 'Sucursal 2', 'Direccion sucursal 2');
INSERT INTO ventaBook_usr.sucursal (id_sucursal, nombre_sucursal, direccion_sucursal) VALUES (null, 'Sucursal 3', 'Direccion sucursal 3');
INSERT INTO ventaBook_usr.sucursal (id_sucursal, nombre_sucursal, direccion_sucursal) VALUES (null, 'Sucursal 4', 'Direccion sucursal 4');
INSERT INTO ventaBook_usr.sucursal (id_sucursal, nombre_sucursal, direccion_sucursal) VALUES (null, 'Sucursal 5', 'Direccion sucursal 5');


-- Creando tipo de documentos.
prompt Creando registros para tabla tipos de documentos;
INSERT INTO ventaBook_usr.tipo_doc (id_tipo_doc, nombre_tipo_documento) VALUES (1, 'Boleta');
INSERT INTO ventaBook_usr.tipo_doc (id_tipo_doc, nombre_tipo_documento) VALUES (2, 'Factura');

-- Creando tipos de usuario.
prompt Creando registros para tabla tipos de usuario;
INSERT INTO ventaBook_usr.tipo_us (id_tipo, nombre_tipo) VALUES (1, 'Vendedor');
INSERT INTO ventaBook_usr.tipo_us (id_tipo, nombre_tipo) VALUES (2, 'Bodeguero');
INSERT INTO ventaBook_usr.tipo_us (id_tipo, nombre_tipo) VALUES (3, 'Administrador');


-- Creando usuarios de ejemplo.
prompt Creando registros de ejemplo para tabla usuarios.;
INSERT INTO ventaBook_usr.usuario (id_Usuario, nombre_usuario, rut_usuario, contrasena_usuario,id_sucursal, id_tipo) VALUES (null, 'Daniel Garcia Asathor', '13707641-1', '123456', 1, 1);
INSERT INTO ventaBook_usr.usuario (id_Usuario, nombre_usuario, rut_usuario, contrasena_usuario,id_sucursal, id_tipo) VALUES (null, 'Pedro Briceno Donoso', '12345678-9', '123456', 1, 1);
INSERT INTO ventaBook_usr.usuario (id_Usuario, nombre_usuario, rut_usuario, contrasena_usuario,id_sucursal, id_tipo) VALUES (null, 'Elias Garcia Carvajal', '12345678-9', '123456', 1, 1);
INSERT INTO ventaBook_usr.usuario (id_Usuario, nombre_usuario, rut_usuario, contrasena_usuario,id_sucursal, id_tipo) VALUES (null, 'Ignacio Salazar Garcia', '12345678-9', '123456', 1, 1);


-- Creando autores de ejemplo.
prompt Creando registros de ejemplo para tabla autores.;
INSERT INTO ventaBook_usr.autor (id_autor, nombre_autor) VALUES (1, 'Joe Abercrombie');
INSERT INTO ventaBook_usr.autor (id_autor, nombre_autor) VALUES (2, 'Dan Abnett');
INSERT INTO ventaBook_usr.autor (id_autor, nombre_Autor) VALUES (3, 'Graham McNeil');
INSERT INTO ventaBook_usr.autor (id_autor, nombre_autor) VALUES (4, 'Isaac Asimov');
INSERT INTO ventaBook_usr.autor (id_autor, nombre_autor) VALUES (5, 'Edgar Allan Poe');


-- Creando libros de ejemplo.
prompt Creando registros de ejemplo para tabla libros;
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (1, 'La voz de las espadas', '123-456', '', 100, 1, 15000); 
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (2, 'Antes de que los cuelguen', '123-457', '', 100, 1, 14000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (3, 'El ultimo argumento de los reyes', '123-458', '', 100, 1, 13000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (4, 'Horus, Senor de la Guerra', '124-456', '', 100, 2, 15000); 
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (5, 'Prospero en llamas', '124-457', '', 100, 2, 14000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (6, 'La batalla de Calth', '124-458', '', 100, 2, 13000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (7, 'Falsos dioses', '125-456', '', 100, 3, 15000); 
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (8, 'Fulgrim', '125-457', '', 100, 3, 14000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (9, 'Mechanicum', '125-458', '', 100, 3, 13000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (10, 'Fundacion', '126-456', '', 100, 4, 15000); 
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (11, 'Fundacion e Imperio', '126-457', '', 100, 4, 14000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (12, 'Segunda fundacion', '126-458', '', 100, 4, 13000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (13, 'Los cr√≠menes de la Rue Morgue', '127-456', '', 100, 5, 15000); 
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (14, 'El escarabajo de Oro', '127-457', '', 100, 5, 14000);
INSERT INTO ventaBook_usr.libro (id_libro, titulo_libro, isbn_libro, sinopsis_libro, cantidadejemplares_libro, id_autor, precio_libro) VALUES (15, 'El misterio de Marie Roget', '127-458', '', 100, 5, 13000);



-- Estableciendo cambios
commit;
prompt Archivo de datos, tablespace, usuario, tablas y datos necesarios listos.;
